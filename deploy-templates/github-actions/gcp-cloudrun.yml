name: Deploy to Google Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: {{ gcpProjectId }}
  SERVICE_NAME: {{ projectName }}
  REGION: {{ gcpRegion }}
  GAR_LOCATION: {{ gcpRegion }}
  REPOSITORY: {{ projectName }}-images

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ '{{' }} secrets.GCP_SA_KEY {{ '}}' }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ '{{' }} env.PROJECT_ID {{ '}}' }}

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ '{{' }} env.GAR_LOCATION {{ '}}' }}-docker.pkg.dev

    - name: Create Artifact Registry repository if not exists
      run: |
        gcloud artifacts repositories create ${{ '{{' }} env.REPOSITORY {{ '}}' }} \
          --repository-format=docker \
          --location=${{ '{{' }} env.GAR_LOCATION {{ '}}' }} \
          --description="Docker repository for {{ projectName }}" || true

    - name: Build and push Docker image
      env:
        IMAGE_TAG: ${{ '{{' }} env.GAR_LOCATION {{ '}}' }}-docker.pkg.dev/${{ '{{' }} env.PROJECT_ID {{ '}}' }}/${{ '{{' }} env.REPOSITORY {{ '}}' }}/${{ '{{' }} env.SERVICE_NAME {{ '}}' }}:${{ '{{' }} github.sha {{ '}}' }}
      run: |
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ '{{' }} env.SERVICE_NAME {{ '}}' }}
        region: ${{ '{{' }} env.REGION {{ '}}' }}
        image: ${{ '{{' }} env.GAR_LOCATION {{ '}}' }}-docker.pkg.dev/${{ '{{' }} env.PROJECT_ID {{ '}}' }}/${{ '{{' }} env.REPOSITORY {{ '}}' }}/${{ '{{' }} env.SERVICE_NAME {{ '}}' }}:${{ '{{' }} github.sha {{ '}}' }}
        flags: |
          --port=3000
          --allow-unauthenticated
          --min-instances=0
          --max-instances=100
          --memory=512Mi
          --cpu=1
          --timeout=60
          --concurrency=80

    - name: Show deployment URL
      run: echo "ðŸš€ Deployed to ${{ '{{' }} steps.deploy.outputs.url {{ '}}' }}"